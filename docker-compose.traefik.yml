--- 
networks: 
  traefik-net: ~
services: 
  mongodb: 
    deploy: 
      replicas: 1
    image: mongo
    networks: 
      - traefik-net
    ports: 
      - "27017:27017"
    volumes: 
      - "mongodata:/data/db"
  ms1: 
    depends_on: 
      - mongodb
    deploy: 
      labels: 
        - traefik.enable=true
        - traefik.port=8080
        - traefik.docker.network=mystack_traefik-net
        - "traefik.frontend.rule=Host:ms1.traefik.kb"
      replicas: 3
    image: melvindave/spring-boot-example
    networks: 
      - traefik-net
  portainer: 
    deploy: 
      labels: 
        - traefik.enable=true
        - traefik.port=9000
        - traefik.docker.network=mystack_traefik-net
        - "traefik.frontend.rule=Host:portainer.traefik.kb"
      placement: 
        constraints: 
          - "node.role == manager"
    image: portainer/portainer
    networks: 
      - traefik-net
    volumes: 
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "portainerdata:/data"
  traefik: 
    command: "--web \\ --docker \\ --docker.swarmmode \\ --docker.domain=traefik.kb \\ --docker.watch \\ --logLevel=DEBUG"
    deploy: 
      placement: 
        constraints: 
          - node.role==manager
    image: traefik
    networks: 
      - traefik-net
    ports: 
      - "80:80"
      - "8080:8080"
    volumes: 
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/dev/null:/traefik.toml"
version: "3.3"
volumes: 
  mongodata: ~
  portainerdata: ~
